version: '3'

networks:
    schedULEnet:
        driver: bridge

    schedULEproxnet:
        driver: bridge

    schedULEbacknet:
        driver: bridge
      

volumes:
    db-data:
        external: false

services:

    schedule-proxy:
        image: nginx:latest
        container_name: schedule-proxy
        volumes:
            - ./Proxy/nginx.conf:/etc/nginx/nginx.conf
            - ./Proxy/error.log:/etc/nginx/error_log.log
        ports:
            - "13370:13370"
        depends_on: 
            - schedule-back
        networks:
            - schedULEnet
            - schedULEproxnet

    schedule-db:
        build: 
            context: ./Db
            args: 
             DATABASE_HOST: ${DATABASE_HOST}
             BACK_HOST: ${BACK_HOST}
        container_name: schedule-db
        command: mysqld --default-authentication-plugin=mysql_native_password
        env_file:
            - ./common.env
        environment:
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        restart: always
        ports:
            - "3306:3306"
        volumes:
            - db-data:/var/lib/mysql
        networks:
            - schedULEbacknet

    schedule-back:
        build: 
            context: ./Back
            args: 
             MYSQL_ROOT_PASSWORD_ARG: ${MYSQL_ROOT_PASSWORD}
             MYSQL_DATABASE_ARG: ${MYSQL_DATABASE}
             MYSQL_USER_ARG: ${MYSQL_USER}
             MYSQL_PASSWORD_ARG: ${MYSQL_PASSWORD}
             DATABASE_HOST_ARG: ${DATABASE_HOST}
             PROXY_HOST_PORT_ARG: ${PROXY_HOST_PORT}
        container_name: schedule-back
        env_file:
            - ./common.env
        restart: on-failure
        ports:
            - "40000:40000"
        depends_on:
            - schedule-db
        healthcheck:
            test: ["CMD", "curl", "-f", "schedule-db:3306"]
            interval: 15s
            timeout: 10s
            retries: 50
        networks:
            - schedULEproxnet
            - schedULEbacknet

    schedule-front:
        build: 
            context: ./Front
            args: 
             PROXY_HOST_ARG: ${PROXY_HOST}
             PROXY_PORT_ARG: ${PROXY_PORT}
             PROXY_HOST_PORT_ARG: ${PROXY_HOST_PORT}
        container_name: schedule-front
        depends_on:
            - schedule-proxy
        restart: on-failure
        healthcheck:
            test: ["CMD", "curl", "-f", "schedule-proxy:13370/sanity/check"]
            interval: 15s
            timeout: 10s
            retries: 50
        env_file:
            - ./common.env
        ports:
            - "80:80"
            - "443:443"
        networks:
            - schedULEnet
